

@model LearningHub.ViewModel.StudentDashboardVM


@{
    ViewBag.Title = "Assignment Upload";
    Layout = "~/Views/Shared/Student/_StudentBase.cshtml";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Assignment
            <small>Assignment Upload</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#">Assignment</a></li>
            <li class="active">Upload</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <!-- left column -->
            <div class="col-md-6">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Assignment Upload</h3>
                    </div>
                    <!-- /.box-header -->
                    <!-- form start -->
                    @using (Html.BeginForm("Create", "StudentAssignmentTbls", FormMethod.Post, new { enctype = "multipart/form-data", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                        @*@Html.ValidationMessage("ErrorMsg")*@
                        @*if (Html.ValidationMessageFor(mo).ToString() == "Uploading Failed")
                            {
                                <div class="alert alert-danger alert-dismissible">
                                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                    @Html.ValidationMessage("ErrorMsg")
                                </div>
                            }*@


                <div class="box-body">
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.studentAssignmentTbl.AssignmentTbl.DeadLineOn, "AssignmentID")
                        @Html.DisplayFor(model => model.studentAssignmentTbl.AssignmentTbl.DeadLineOn)
                    </div>*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.studentAssignmentTbl.AssignmentID, "AssignmentID")
                        @Html.DropDownList("AssignmentID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.studentAssignmentTbl.AssignmentID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.Label("", "Select Assignment File")
                        @Html.TextBox("file", "", new { type = "file" }) <br />
                        <div class="alert alert-danger alert-dismissible" @if (Html.ViewData.ModelState.IsValidField("MeterailPath")) { <text> style="display:none" </text> }>
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                            @Html.ValidationMessage("MeterailPath")
                        </div>
                    </div>
                </div>
                        <!-- /.box-body -->

                        <div class="box-footer">
                            <button type="submit" class="btn bg-purple">Submit</button>
                        </div>
                    }
                </div>
                <!-- /.box -->

            </div>
            <!--/.col (left) -->
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
@section Scripts
{

}